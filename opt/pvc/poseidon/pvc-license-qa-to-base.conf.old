VERSION 20200618
PROJECT license
DATASET license
PROVISION smf3-pure3 qa-posmysql02

# Constraint: must have exactly one PROVISION line with one SAN and one HOST
# Step 1 (HOST): mysql-flush-db.sh ${DBNAME} && sync && fstrim -v ${MOUNTPOINTDIR}/${OSMOUNT} && mysql-flush-db.sh ${DBNAME} && sync && sync && echo "OK" || echo "ERROR"
# Step 2 (SAN): purevol copy --overwrite ${SANVOLNAME} ${BASEVOL}

# CREATEVOL <VolSizeG> [mkfs_cmd ...]
# VolSize used by pvc-1-create-volumes.sh to create new volume on SAN when
# needs to be copied at the filesystem level, rather than at the volume level
# mkfs_cmd used by pvc-4-mount-filesystems.sh which executes the mkfs command on each host
# if mkfs command isn't supplied, default to "mkfs.ext4 -N 1048576"
#CREATEVOL 300G mkfs.ext4 -N 1048576
CREATEVOL 300G

# POSTMOUNT command to run  (by pvc-4-mount-filesystems.sh) after volume is mounted
# (preceded by chdir to new directory, generated from ${MOUNTPOINTDIR}/${OSMOUNT_TPL}
# sshcmd on target host(s): sh -c "cd ${MOUNTPOINTDIR}/${OSMOUNT} && $*"
#POSTMOUNT mkdir -p data tmp import export meta bridge && chown -R mysql:mysql *

# BASEVOL_TPL will be ignored if CREATEVOL is used
BASEVOL_TPL base-db-$(lc ${PROJECT})-${VERSION}

SANWWVNPREFIX 3624a9370
MYSQLDATADIR /db/mysql/data
MOUNTPOINTDIR /db
SANVOLNAME_TPL ${HOST}-db-$(lc ${DATASET})-${VERSION}
OSMAPNAME_TPL ${DATASET}-${VERSION}
OSMOUNT_TPL ${PROJECT}-${VERSION}
OSVOLLABEL_TPL $(echo $PROJECT | cut -c1-4)${VERSION}
#OSVOLLABEL_TPL $(echo $PROJECT | cut -c1)$(echo $DATASET | cut -c1)_${VERSION}
DBNAME_TPL ${DATASET}_${VERSION}
